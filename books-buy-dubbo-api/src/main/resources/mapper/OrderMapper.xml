<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanrui.api.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.yanrui.api.pojo.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="uid" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="shipping_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="payment_type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="score" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="payment_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="send_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="close_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no , uid, shipping_id , payment, payment_type , score, status, payment_time,
    send_time, end_time, close_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yanrui.api.pojo.Order">
    insert into `order` (id, order_no, uid,
      shipping_id, payment, payment_type,
      score, status, payment_time,
      send_time, end_time, close_time,
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR},
      #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{paymentTime,jdbcType=TIMESTAMP},
      #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yanrui.api.pojo.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="shippingId != null">
        shipping_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=VARCHAR},
      </if>
      <if test="shippingId != null">
        #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanrui.api.pojo.Order">
    update `order`
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=VARCHAR},
      </if>
      <if test="shippingId != null">
        shipping_id = #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanrui.api.pojo.Order">
    update `order`
    set order_no = #{orderNo,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=VARCHAR},
      shipping_id = #{shippingId,jdbcType=INTEGER},
      payment = #{payment,jdbcType=DECIMAL},
      payment_type = #{paymentType,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      send_time = #{sendTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      close_time = #{closeTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAllOrderByUid" parameterType="string" resultType="map">
<!--    select `order`.id as orderId, `order`.order_no as orderNo, payment,`order`.create_time as createTime,-->
<!--      product_id as productId,product_name as productName,product_image as image,current_unit_price as price,-->
<!--      quantity, total_price as totalPrice-->
<!--    from `order`,order_item-->
<!--    where `order`.order_no=order_item.order_no-->
<!--    and `order`.uid=#{uid,jdbcType=VARCHAR}-->
    select `order`.id as orderId, order_no as orderNo, `order`.uid, `order`.shipping_id as shippingId,
        payment, payment_type as paymentType, score, `order`.status, payment_time as paymentTime, send_time as sendTime,
        end_time as endTime, close_time as closeTime, `order`.create_time as createTime, `order`.update_time as updateTime,
        shipping.name as shippingName, shipping.phone, shipping.address
    from `order`, shipping
    where `order`.shipping_id=shipping.id
    and `order`.status!='0'
    and `order`.uid=#{uid,jdbcType=VARCHAR}
  </select>
  <select id="findOrderByUidAndStatus" parameterType="map" resultType="map">
    select `order`.id as orderId, order_no as orderNo, `order`.uid, `order`.shipping_id as shippingId,
           payment, payment_type as paymentType, score, `order`.status, payment_time as paymentTime, send_time as sendTime,
           end_time as endTime, close_time as closeTime, `order`.create_time as createTime, `order`.update_time as updateTime,
           shipping.name as shippingName, shipping.phone, shipping.address
    from `order`, shipping
    where `order`.shipping_id=shipping.id
      and `order`.uid=#{param1,jdbcType=VARCHAR}
      and `order`.status=#{param2,jdbcType=VARCHAR}
  </select>
</mapper>